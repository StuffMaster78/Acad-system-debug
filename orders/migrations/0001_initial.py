# Generated by Django 4.2 on 2025-01-26 16:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('discounts', '0001_initial'),
        ('websites', '0002_website_allow_guest_checkout_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('title', models.CharField(help_text='Title of the order', max_length=255)),
                ('topic', models.CharField(help_text='Topic of the work', max_length=255)),
                ('instructions', models.TextField(help_text='Detailed instructions provided by the client')),
                ('academic_level', models.CharField(help_text='Academic level required', max_length=50)),
                ('subject', models.CharField(max_length=100)),
                ('type_of_work', models.CharField(choices=[('writing', 'Writing'), ('editing', 'Editing'), ('rewriting', 'Rewriting')], help_text='Type of work required', max_length=20)),
                ('number_of_pages', models.PositiveIntegerField(default=1, help_text='Number of pages required')),
                ('number_of_slides', models.PositiveIntegerField(default=0, help_text='Number of slides required (if applicable)')),
                ('client_deadline', models.DateTimeField(help_text='Deadline specified by the client')),
                ('writer_deadline', models.DateTimeField(blank=True, help_text='Deadline for the writer (buffered)', null=True)),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total price for the order', max_digits=10)),
                ('additional_services', models.JSONField(blank=True, default=dict, help_text='Additional services selected by the client')),
                ('tips', models.DecimalField(decimal_places=2, default=0, help_text='Tips provided by the client', max_digits=8)),
                ('payment_status', models.CharField(choices=[('paid', 'Paid'), ('unpaid', 'Unpaid'), ('partial', 'Partial')], default='unpaid', help_text='Payment status of the order', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('available', 'Available'), ('unpaid', 'Unpaid'), ('critical', 'Critical'), ('late', 'Late'), ('in_progress', 'In Progress'), ('revision', 'Revision'), ('disputed', 'Disputed'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('archived', 'Archived'), ('paid', 'Paid')], default='pending', help_text='Current status of the order', max_length=20)),
                ('revision_requested', models.BooleanField(default=False, help_text='Indicates if a revision has been requested')),
                ('date_posted', models.DateTimeField(auto_now_add=True, help_text='Date when the order was posted')),
                ('completed_at', models.DateTimeField(blank=True, help_text='Date when the order was completed', null=True)),
                ('is_high_value', models.BooleanField(default=False, help_text='Flag for high-value orders')),
                ('is_urgent', models.BooleanField(default=False, help_text='Flag for urgent orders')),
                ('assigned_writer', models.ForeignKey(blank=True, help_text='Writer assigned to the order', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='writer_orders', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(help_text='Client placing the order', on_delete=django.db.models.deletion.CASCADE, related_name='client_orders', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created the record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('discount_code', models.ForeignKey(blank=True, help_text='Discount code applied to the order', null=True, on_delete=django.db.models.deletion.SET_NULL, to='discounts.discount')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated the record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(blank=True, help_text='Website this record is associated with', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='websites.website')),
            ],
            options={
                'ordering': ['-date_posted'],
            },
        ),
    ]
