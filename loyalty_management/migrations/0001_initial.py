# Generated by Django 5.1.5 on 2025-01-29 12:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client_management', '0001_initial'),
        ('websites', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the milestone (e.g., 'First $100 Spent').", max_length=100)),
                ('description', models.TextField(blank=True, help_text='Details about the milestone.', null=True)),
                ('target_type', models.CharField(choices=[('total_spent', 'Total Spent'), ('loyalty_points', 'Loyalty Points'), ('orders_placed', 'Orders Placed')], help_text='Type of milestone (e.g., total spent, loyalty points).', max_length=50)),
                ('target_value', models.PositiveIntegerField(help_text='Value the client must achieve to earn this milestone.')),
                ('reward_points', models.PositiveIntegerField(default=0, help_text='Loyalty points rewarded upon achieving this milestone.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this milestone was created.')),
            ],
            options={
                'verbose_name': 'Milestone',
                'verbose_name_plural': 'Milestones',
                'ordering': ['target_value'],
            },
        ),
        migrations.CreateModel(
            name='ClientBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge_name', models.CharField(help_text="Name of the badge (e.g., 'Top Spender').", max_length=100)),
                ('description', models.TextField(blank=True, help_text='Details about why this badge was awarded.', null=True)),
                ('awarded_at', models.DateTimeField(auto_now_add=True, help_text='When this badge was awarded.')),
                ('client', models.ForeignKey(help_text='Client who earned this badge.', on_delete=django.db.models.deletion.CASCADE, related_name='badges', to='client_management.clientprofile')),
            ],
            options={
                'verbose_name': 'Client Badge',
                'verbose_name_plural': 'Client Badges',
            },
        ),
        migrations.CreateModel(
            name='LoyaltyTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the loyalty tier (e.g., Bronze, Silver, Gold).', max_length=50, unique=True)),
                ('threshold', models.PositiveIntegerField(help_text='Minimum points required to qualify for this tier.')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount percentage for clients in this tier.', max_digits=5)),
                ('perks', models.TextField(blank=True, help_text='Additional perks or benefits for this tier.', null=True)),
                ('website', models.ForeignKey(help_text='Website this tier is associated with.', on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_tiers', to='websites.website')),
            ],
            options={
                'verbose_name': 'Loyalty Tier',
                'verbose_name_plural': 'Loyalty Tiers',
                'ordering': ['threshold'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(help_text='Number of points added, redeemed, or deducted.')),
                ('transaction_type', models.CharField(choices=[('add', 'Add'), ('redeem', 'Redeem'), ('deduct', 'Deduct')], default='add', help_text='Type of transaction (add, redeem, deduct).', max_length=20)),
                ('reason', models.TextField(blank=True, help_text='Reason for the loyalty transaction.', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Time when the transaction was recorded.')),
                ('client', models.ForeignKey(help_text='Client associated with this transaction.', on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_transactions', to='client_management.clientprofile')),
            ],
            options={
                'verbose_name': 'Loyalty Transaction',
                'verbose_name_plural': 'Loyalty Transactions',
                'ordering': ['-timestamp'],
            },
        ),
    ]
