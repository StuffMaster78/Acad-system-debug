# Generated by Django 5.2.3 on 2025-06-21 02:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        ('websites', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='accountdeletionrequest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accountdeletionrequest',
            name='website',
            field=models.ForeignKey(help_text='The website where the request is coming from', on_delete=django.db.models.deletion.CASCADE, related_name='deletion_requests_website', to='websites.website'),
        ),
        migrations.AddField(
            model_name='accountlockout',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lockouts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accountlockout',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_lockouts', to='websites.website'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logging_website', to='websites.website'),
        ),
        migrations.AddField(
            model_name='backupcode',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backup_codes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='backupcode',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backup_codes', to='websites.website'),
        ),
        migrations.AddField(
            model_name='blockedip',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_ips', to='websites.website'),
        ),
        migrations.AddField(
            model_name='blockediplog',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_ip_logs', to='websites.website'),
        ),
        migrations.AddField(
            model_name='encryptedrefreshtoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='encryptedrefreshtoken',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secure_website_tokens', to='websites.website'),
        ),
        migrations.AddField(
            model_name='impersonationlog',
            name='admin_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impersonation_logs_for_admin', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='impersonationlog',
            name='target_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impersonation_logs_for_target_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='impersonationlog',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impersonation_logs', to='websites.website'),
        ),
        migrations.AddField(
            model_name='impersonationtoken',
            name='admin_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_impersonation_tokens', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='impersonationtoken',
            name='target_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impersonated_by_tokens', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='impersonationtoken',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impersonation_web_tokens', to='websites.website'),
        ),
        migrations.AddField(
            model_name='impersonationlog',
            name='token',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.impersonationtoken'),
        ),
        migrations.AddField(
            model_name='loginsession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='loginsession',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_sessions', to='websites.website'),
        ),
        migrations.AddField(
            model_name='logoutevent',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='logoutevent',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logout_events', to='websites.website'),
        ),
        migrations.AddField(
            model_name='magiclink',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='magic_links', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='magiclink',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='magic_links', to='websites.website'),
        ),
        migrations.AddField(
            model_name='mfasettings',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mfasettings',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mfa_settings', to='websites.website'),
        ),
        migrations.AddField(
            model_name='otp',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='otp',
            name='website',
            field=models.ForeignKey(help_text='the website getting the OTP', on_delete=django.db.models.deletion.CASCADE, to='websites.website'),
        ),
        migrations.AddField(
            model_name='passwordresetrequest',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='passwordresetrequest',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_resets', to='websites.website'),
        ),
        migrations.AddField(
            model_name='registrationconfirmationlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registrationconfirmationlog',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='websites.website'),
        ),
        migrations.AddField(
            model_name='registrationtoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registering_users_token', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='registrationtoken',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registration_tokens', to='websites.website'),
        ),
        migrations.AddField(
            model_name='securetoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='securetoken',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secure_tokens', to='websites.website'),
        ),
        migrations.AddField(
            model_name='trusteddevice',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trusted_devices_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='trusteddevice',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trusted_devices_website', to='websites.website'),
        ),
        migrations.AddField(
            model_name='usersession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_for_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usersession',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_sessions', to='websites.website'),
        ),
        migrations.AlterUniqueTogether(
            name='blockedip',
            unique_together={('website', 'ip_address')},
        ),
        migrations.AddIndex(
            model_name='magiclink',
            index=models.Index(fields=['token', 'expires_at'], name='authenticat_token_b076a6_idx'),
        ),
    ]
