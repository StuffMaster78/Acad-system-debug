# Generated by Django 5.1.5 on 2025-02-04 03:03

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EscalationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('blacklist_client', 'Blacklist Client'), ('promote_writer', 'Promote Writer'), ('demote_writer', 'Demote Writer'), ('writer_probation', 'Put Writer on Probation'), ('suspend_writer', 'Suspend Writer'), ('suspend_client', 'Suspend Client')], max_length=50)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FAQCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('category_type', models.CharField(choices=[('writer', 'Writer FAQs'), ('client', 'Client FAQs')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FAQManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderDisputeSLA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sla_type', models.CharField(choices=[('order_resolution', 'Order Resolution'), ('dispute_resolution', 'Dispute Resolution')], max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expected_resolution_time', models.DateTimeField()),
                ('actual_resolution_time', models.DateTimeField(blank=True, null=True)),
                ('sla_breached', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentIssueLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('unpaid_order', 'Unpaid Order'), ('overpayment', 'Overpayment Issue'), ('underpayment', 'Underpayment Issue'), ('refund_request', 'Refund Request')], max_length=30)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('resolved', 'Resolved'), ('escalated', 'Escalated')], default='pending', max_length=20)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupportActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupportActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('updated_order_status', 'Updated Order Status'), ('resolved_dispute', 'Resolved Dispute'), ('escalated_case', 'Escalated Case'), ('managed_payment_issue', 'Managed Payment Issue'), ('uploaded_order_file', 'Uploaded Order File'), ('deleted_order_file', 'Deleted Order File'), ('sent_message', 'Sent Message'), ('moderated_message', 'Moderated Message')], max_length=50)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupportAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('last_checked_in', models.DateTimeField(blank=True, null=True)),
                ('is_online', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SupportDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_tickets_handled', models.PositiveIntegerField(default=0)),
                ('total_disputes_handled', models.PositiveIntegerField(default=0)),
                ('total_orders_managed', models.PositiveIntegerField(default=0)),
                ('pending_tickets', models.PositiveIntegerField(default=0)),
                ('pending_disputes', models.PositiveIntegerField(default=0)),
                ('escalated_cases', models.PositiveIntegerField(default=0)),
                ('overdue_tasks', models.PositiveIntegerField(default=0)),
                ('flagged_issues', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupportGlobalAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_view_orders', models.BooleanField(default=True)),
                ('can_view_clients', models.BooleanField(default=True)),
                ('can_view_writers', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupportMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_flagged', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SupportMessageAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_view_order_messages', models.BooleanField(default=True)),
                ('can_view_dispute_messages', models.BooleanField(default=True)),
                ('can_view_ticket_messages', models.BooleanField(default=True)),
                ('can_moderate_messages', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupportNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SupportOrderFileManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('upload', 'Upload'), ('delete', 'Delete'), ('restrict', 'Restrict Access')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupportOrderManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('restore_in_progress', 'Restore to In Progress'), ('close_dispute_client', 'Close Dispute - Client Wins'), ('close_dispute_writer', 'Close Dispute - Writer Wins'), ('recommend_price_change', 'Recommend Price Change')], max_length=30)),
                ('reason', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('admin_reviewed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SupportPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_manage_tickets', models.BooleanField(default=True)),
                ('can_handle_disputes', models.BooleanField(default=True)),
                ('can_recommend_blacklist', models.BooleanField(default=True)),
                ('can_approve_probation', models.BooleanField(default=False)),
                ('can_approve_blacklist', models.BooleanField(default=False)),
                ('can_recommend_writer_promotion', models.BooleanField(default=True)),
                ('can_put_writer_on_probation', models.BooleanField(default=True)),
                ('can_promote_writer', models.BooleanField(default=False)),
                ('can_create_internal_tickets', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupportProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('registration_id', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('inactive', 'Inactive')], default='active', max_length=20)),
                ('last_logged_in', models.DateTimeField(blank=True, null=True)),
                ('orders_handled', models.PositiveIntegerField(default=0)),
                ('disputes_handled', models.PositiveIntegerField(default=0)),
                ('tickets_handled', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SupportWorkloadTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tickets_handled', models.PositiveIntegerField(default=0)),
                ('disputes_handled', models.PositiveIntegerField(default=0)),
                ('orders_managed', models.PositiveIntegerField(default=0)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WriterPerformanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('missed_deadline', 'Missed Deadline'), ('poor_quality', 'Poor Quality Work'), ('client_complaint', 'Client Complaint'), ('excessive_revisions', 'Excessive Revisions'), ('dispute_lost', 'Dispute Lost')], max_length=50)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DisputeResolutionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('dispute', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resolution_log', to='orders.dispute')),
            ],
        ),
    ]
