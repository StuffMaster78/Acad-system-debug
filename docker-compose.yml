services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app  
    working_dir: /app
    ports:
      - "8000:8000"  # Expose Django app to localhost
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}  # Load database name
      POSTGRES_USER: ${POSTGRES_USER}  # Load database user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # Load database password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # Expose PostgreSQL for local dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"  # Expose Redis (can remove for production)
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  celery:
      build:
        context: .
        dockerfile: Dockerfile
      command: celery -A core.celery worker --loglevel=info
      volumes:
        - .:/app
      depends_on:
        - db
        - redis

volumes:
  postgres_data:



# For production
# command: gunicorn your_project_name.wsgi:application --bind 0.0.0.0:8000 --workers=3