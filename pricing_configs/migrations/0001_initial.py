# Generated by Django 5.1.6 on 2025-02-22 03:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('websites', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicLevelPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the academic level (e.g., High School, Undergraduate, Masterâ€™s, PhD).', max_length=100, unique=True)),
                ('multiplier', models.DecimalField(decimal_places=2, default=1.0, help_text='Multiplier applied to base order pricing for this academic level.', max_digits=5)),
                ('description', models.TextField(blank=True, help_text='Optional description of this academic level.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the pricing was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the pricing was last updated.')),
                ('website', models.ForeignKey(help_text='Website this pricing configuration applies to.', on_delete=django.db.models.deletion.CASCADE, related_name='academic_level_pricing', to='websites.website')),
            ],
            options={
                'verbose_name': 'Academic Level Pricing',
                'verbose_name_plural': 'Academic Level Pricing',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AdditionalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the additional service (e.g., Plagiarism Report).', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the service.')),
                ('cost', models.DecimalField(decimal_places=2, help_text='Cost of the service (USD).', max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this service is currently active.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the pricing was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the pricing was last updated.')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_service_pricing_configs', to='websites.website')),
            ],
            options={
                'verbose_name': 'Additional Service',
                'verbose_name_plural': 'Additional Services',
            },
        ),
        migrations.CreateModel(
            name='PricingConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_price_per_page', models.DecimalField(decimal_places=2, help_text='Base price per page (USD).', max_digits=10)),
                ('base_price_per_slide', models.DecimalField(decimal_places=2, help_text='Base price per slide (USD).', max_digits=10)),
                ('technical_order_multiplier', models.DecimalField(decimal_places=2, help_text='Multiplier for technical subjects (e.g., 1.5x for technical).', max_digits=5)),
                ('non_technical_order_multiplier', models.DecimalField(decimal_places=2, help_text='Multiplier for non-technical subjects (e.g., 1.0x for non-technical).', max_digits=5)),
                ('preferred_writer_cost', models.DecimalField(decimal_places=2, default=0, help_text='Additional cost for selecting a preferred writer.', max_digits=10)),
                ('urgent_order_threshold', models.PositiveIntegerField(default=8, help_text='Urgent order threshold in hours.')),
                ('urgent_order_multiplier', models.DecimalField(decimal_places=2, default=1.2, help_text='Multiplier for urgent orders (e.g., 1.2x for urgent).', max_digits=5)),
                ('hvo_threshold', models.DecimalField(decimal_places=2, default=100, help_text='High-value order threshold (total cost).', max_digits=10)),
                ('hvo_additional_cost', models.DecimalField(decimal_places=2, default=0, help_text='Additional cost added to high-value orders.', max_digits=10)),
                ('long_deadline_flat_fee', models.DecimalField(decimal_places=2, default=0, help_text='Flat fee for orders with deadlines longer than 30 days.', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the pricing was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the pricing was last updated.')),
                ('website', models.ForeignKey(help_text='Website-specific pricing configuration.', on_delete=django.db.models.deletion.CASCADE, related_name='pricing_configurations_for_websites', to='websites.website')),
            ],
            options={
                'verbose_name': 'Pricing Configuration',
                'verbose_name_plural': 'Pricing Configurations',
            },
        ),
        migrations.CreateModel(
            name='WriterQuality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the writer quality level (e.g., Beginner, Expert).', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the writer quality level.')),
                ('cost_multiplier', models.DecimalField(decimal_places=2, help_text='Multiplier applied to base price for this quality level (e.g., 1.5x for Expert).', max_digits=5)),
                ('minimum_rating', models.DecimalField(decimal_places=1, default=0.0, help_text='Minimum average rating required for this quality level (e.g., 4.5).', max_digits=3)),
                ('minimum_completed_orders', models.PositiveIntegerField(default=0, help_text='Minimum number of completed orders required for this level.')),
                ('max_orders_limit', models.PositiveIntegerField(default=0, help_text='Maximum number of orders a writer at this level can take simultaneously.')),
                ('urgent_order_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Additional cost for urgent orders for this quality level.', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the pricing was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the pricing was last updated.')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='writer_quality_pricing_configs', to='websites.website')),
            ],
            options={
                'verbose_name': 'Writer Quality',
                'verbose_name_plural': 'Writer Qualities',
            },
        ),
    ]
