# Generated by Django 5.1.6 on 2025-02-22 04:23

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('websites', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('type', models.CharField(choices=[('in_app', 'In-App'), ('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')], default='in_app', help_text='The type of notification.', max_length=20)),
                ('title', models.CharField(help_text='Notification title.', max_length=255)),
                ('message', models.TextField(help_text='Notification content.')),
                ('is_read', models.BooleanField(default=False, help_text='Has the user read this notification?')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed')], default='pending', help_text='Delivery status of the notification.', max_length=20)),
                ('category', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error')], max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, help_text='When the notification was sent.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created the record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated the record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='The user receiving the notification.', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(blank=True, help_text='Website this record is associated with', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='websites.website')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('receive_email', models.BooleanField(default=True, help_text='Allow email notifications.')),
                ('receive_sms', models.BooleanField(default=False, help_text='Allow SMS notifications.')),
                ('receive_push', models.BooleanField(default=True, help_text='Allow push notifications.')),
                ('receive_in_app', models.BooleanField(default=True, help_text='Allow in-app notifications.')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created the record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated the record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(help_text='The user whose preferences are being managed.', on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(blank=True, help_text='Website this record is associated with', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='websites.website')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
