from django.core.management.base import BaseCommand
from notifications_system.models import NotificationEvent

class Command(BaseCommand):
    def handle(self, *args, **kwargs):
        events = [
            ("order.assigned", "Order Assigned", "Notifies when a writer is assigned."),
            ("payment.successful", "Payment Success", "Notifies a user after payment."),
            ("revision.requested", "Revision Requested", "Triggered on client revision."),
            ("invoice.issue", "Invoice Issue", "Fired when there's a billing issue."),
            ("order.completed", "Order Completed", "Triggered when an order is completed."),
            ("order.cancelled", "Order Cancelled", "Triggered when an order is cancelled."),
            ("order.reopened", "Order Reopened", "Triggered when an order is reopened."),
            ("order.approved", "Order Approved", "Triggered when an order is approved."),
            ("order.rejected", "Order Rejected", "Triggered when an order is rejected."),
            ("user.registered", "User Registered", "Notifies when a new user registers."),
            ("user.profile_updated", "User Profile Updated", "Notifies when a user updates their profile."),
            ("user.password_reset", "Password Reset", "Triggered when a user resets their password."),
            ("user.email_verified", "Email Verified", "Triggered when a user verifies their email."),
            ("user.account_suspended", "Account Suspended", "Triggered when a user's account is suspended."),
            ("user.account_reactivated", "Account Reactivated", "Triggered when a user's account is reactivated."),
            ("system.maintenance", "System Maintenance", "Notifies users about scheduled maintenance."),
            ("system.update_available", "Update Available", "Notifies users about available updates."),
            ("system.security_alert", "Security Alert", "Notifies users about security issues."),
            ("system.feature_announced", "Feature Announced", "Notifies users about new features."),
            ("system.newsletter", "Newsletter", "Sends periodic newsletters to users."),
            ("system.survey", "Survey", "Notifies users about surveys to gather feedback."),
            ("system.promotion", "Promotion", "Notifies users about ongoing promotions or discounts."),
            ("system.event_reminder", "Event Reminder", "Reminds users about upcoming events."),
            ("system.daily_summary", "Daily Summary", "Sends a summary of daily activities to users."),
            ("system.weekly_summary", "Weekly Summary", "Sends a summary of weekly activities to users."),
            ("system.monthly_summary", "Monthly Summary", "Sends a summary of monthly activities to users."),
            ("system.alert", "System Alert", "Sends critical alerts to users."),
            ("system.notification", "General Notification", "Sends general notifications to users."),
            ("system.custom_event", "Custom Event", "Allows for custom events to be defined and triggered.")
            ("ticket.created", "Ticket Created", "Notifies when a support ticket is created."),
            ("ticket.updated", "Ticket Updated", "Notifies when a support ticket is updated."),
            ("ticket.closed", "Ticket Closed", "Notifies when a support ticket is closed."),
            ("ticket.reopened", "Ticket Reopened", "Notifies when a support ticket is reopened."),
            ("ticket.assigned", "Ticket Assigned", "Notifies when a support ticket is assigned to an agent."),
            ("ticket.escalated", "Ticket Escalated", "Notifies when a support ticket is escalated."),
            ("ticket.comment_added", "Comment Added", "Notifies when a comment is added to a support ticket."),
            ("ticket.status_changed", "Ticket Status Changed", "Notifies when the status of a support ticket changes."),
            ("ticket.priority_changed", "Ticket Priority Changed", "Notifies when the priority of a support ticket changes."),
            ("ticket.agent_replied", "Agent Replied", "Notifies when an agent replies to a support ticket."),
            ("ticket.user_replied", "User Replied", "Notifies when a user replies to a support ticket."),
            ("ticket.follow_up", "Follow Up Required", "Notifies when a follow-up is required on a support ticket."),
            ("ticket.reminder", "Ticket Reminder", "Notifies when a reminder is set for a support ticket."),
            ("ticket.feedback_requested", "Feedback Requested", "Notifies when feedback is requested on a support ticket."),
            ("ticket.satisfaction_survey", "Satisfaction Survey", "Notifies when a satisfaction survey is sent after ticket resolution."),
            ("ticket.knowledge_base_article", "Knowledge Base Article", "Notifies when a knowledge base article is linked to a support ticket."),
            ("ticket.solution_provided", "Solution Provided", "Notifies when a solution is provided for a support ticket."),
            ("ticket.urgent_ticket", "Urgent Ticket", "Notifies when a support ticket is marked as urgent.")
            ("ticket.bulk_action", "Bulk Action Performed", "Notifies when a bulk action is performed on support tickets."),
            ("ticket.auto_response", "Auto Response Sent", "Notifies when an auto response is sent for a support ticket."),
            ("ticket.agent_assigned", "Agent Assigned", "Notifies when an agent is assigned to a support ticket."),
            ("ticket.user_tagged", "User Tagged", "Notifies when a user is tagged in a support ticket."),
            ("ticket.agent_tagged", "Agent Tagged", "Notifies when an agent is tagged in a support ticket."),
            ("ticket.internal_note_added", "Internal Note Added", "Notifies when an internal note is added to a support ticket."),
            ("ticket.external_note_added", "External Note Added", "Notifies when an external note is added to a support ticket."),
            ("ticket.ticket_linked", "Ticket Linked", "Notifies when a support ticket is linked to another ticket."),
            ("ticket.ticket_unlinked", "Ticket Unlinked", "Notifies when a support ticket is unlinked from another ticket.")
            ("payment.success", "Payment Success", "Notifies when a payment is successful."),
            ("payment.failure", "Payment Failure", "Notifies when a payment fails."),
            ("payment.refund", "Payment Refund", "Notifies when a payment is refunded."),
            ("payment.dispute", "Payment Dispute", "Notifies when a payment dispute is raised."),
            ("payment.settlement", "Payment Settlement", "Notifies when a payment is settled."),
            ("payment.invoice_generated", "Invoice Generated", "Notifies when an invoice is generated for a payment."),
            ("payment.invoice_paid", "Invoice Paid", "Notifies when an invoice is paid."),
            ("payment.invoice_overdue", "Invoice Overdue", "Notifies when an invoice is overdue."),
            ("payment.subscription_created", "Subscription Created", "Notifies when a subscription is created."),
            ("payment.subscription_renewed", "Subscription Renewed", "Notifies when a subscription is renewed."),
            ("payment.subscription_cancelled", "Subscription Cancelled", "Notifies when a subscription is cancelled."),
            ("payment.subscription_expired", "Subscription Expired", "Notifies when a subscription expires."),
            ("payment.subscription_payment_failed", "Subscription Payment Failed", "Notifies when a subscription payment fails.")
            ("payment.subscription_payment_success", "Subscription Payment Success", "Notifies when a subscription payment is successful."),
            ("payment.subscription_trial_ended", "Subscription Trial Ended", "Notifies when a subscription trial period ends."),
            ("payment.subscription_trial_started", "Subscription Trial Started", "Notifies when a subscription trial period starts."),
            ("payment.payment_method_added", "Payment Method Added", "Notifies when a new payment method is added."),
            ("payment.payment_method_removed", "Payment Method Removed", "Notifies when a payment method is removed."),
            ("payment.payment_method_updated", "Payment Method Updated", "Notifies when a payment method is updated.")
            ("payment.payment_method_default", "Payment Method Set as Default", "Notifies when a payment method is set as default."),
            ("payment.payment_method_failed", "Payment Method Failed", "Notifies when a payment method fails."),
            ("payment.payment_method_success", "Payment Method Success", "Notifies when a payment method is successful."),
            ("payment.payment_method_expired", "Payment Method Expired", "Notifies when a payment method expires."),
            ("payment.payment_method_reactivated", "Payment Method Reactivated", "Notifies when a payment method is reactivated.")
            ("payment.payment_method_deactivated", "Payment Method Deactivated", "Notifies when a payment method is deactivated."),
            ("payment.payment_method_verified", "Payment Method Verified", "Notifies when a payment method is verified."),
            ("payment.payment_method_unverified", "Payment Method Unverified", "Notifies when a payment method is unverified."),
            ("payment.payment_method_pending", "Payment Method Pending", "Notifies when a payment method is pending verification."),
            ("payment.payment_method_failed_verification", "Payment Method Failed Verification", "Notifies when a payment method fails verification."),
            ("payment.payment_method_successful_verification", "Payment Method Successful Verification", "Notifies when a payment method is successfully verified.")
            ("payment.payment_method_verification_required", "Payment Method Verification Required", "Notifies when a payment method requires verification."),
            ("payment.payment_method_verification_completed", "Payment Method Verification Completed", "Notifies when a payment method verification is completed."),
            ("payment.payment_method_verification_failed", "Payment Method Verification Failed", "Notifies when a payment method verification fails."),
            ("payment.payment_method_verification_pending", "Payment Method Verification Pending", "Notifies when a payment method verification is pending."),
            ("payment.payment_method_verification_expired", "Payment Method Verification Expired", "Notifies when a payment method verification expires."),
            ("badge.created", "Badge Created", "Notifies when a new badge is created."),
            ("badge.updated", "Badge Updated", "Notifies when a badge is updated."),
            ("badge.deleted", "Badge Deleted", "Notifies when a badge is deleted."),
            ("badge.earned", "Badge Earned", "Notifies when a user earns a badge."),
            ("badge.awarded", "Badge Awarded", "Notifies when a badge is awarded to a user."),
            ("badge.revoked", "Badge Revoked", "Notifies when a badge is revoked from a user."),
            ("badge.reminder", "Badge Reminder", "Reminds users about badges they can earn."),
            ("badge.eligibility_changed", "Badge Eligibility Changed", "Notifies when badge eligibility criteria change."),
            ("badge.achievement", "Badge Achievement", "Notifies when a user achieves a badge."),
            ("badge.challenge_completed", "Badge Challenge Completed", "Notifies when a user completes a badge challenge."),
            ("badge.challenge_failed", "Badge Challenge Failed", "Notifies when a user fails a badge challenge."),
            ("badge.challenge_started", "Badge Challenge Started", "Notifies when a user starts a badge challenge."),
            ("badge.challenge_stopped", "Badge Challenge Stopped", "Notifies when a user stops a badge challenge."),
            ("badge.challenge_progress", "Badge Challenge Progress", "Notifies users about their progress in a badge challenge."),
            ("badge.challenge_reminder", "Badge Challenge Reminder", "Reminds users about ongoing badge challenges."),
            ("badge.challenge_expired", "Badge Challenge Expired", "Notifies when a badge challenge expires."),
            ("badge.challenge_rewarded", "Badge Challenge Rewarded", "Notifies when a user is rewarded for completing a badge challenge."),
            ("badge.challenge_unrewarded", "Badge Challenge Unrewarded", "Notifies when a user is not rewarded for a badge challenge.")
            ("badge.challenge_reactivated", "Badge Challenge Reactivated", "Notifies when a badge challenge is reactivated."),
            ("badge.challenge_deactivated", "Badge Challenge Deactivated", "Notifies when a badge challenge is deactivated."),
            ("badge.challenge_activated", "Badge Challenge Activated", "Notifies when a badge challenge is activated."),
            ("badge.challenge_completed_successfully", "Badge Challenge Completed Successfully", "Notifies when a user successfully completes a badge challenge."),
            ("badge.challenge_completed_unsuccessfully", "Badge Challenge Completed Unsuccessfully", "Notifies when a user unsuccessfully completes a badge challenge."),
            ("badge.challenge_started_successfully", "Badge Challenge Started Successfully", "Notifies when a user successfully starts a badge challenge."),
            ("badge.challenge_started_unsuccessfully", "Badge Challenge Started Unsuccessfully", "Notifies when a user unsuccessfully starts a badge challenge."),
            ("dispute.created", "Dispute Created", "Notifies when a new dispute is created."),
            ("dispute.updated", "Dispute Updated", "Notifies when a dispute is updated."),
            ("dispute.resolved", "Dispute Resolved", "Notifies when a dispute is resolved."),
            ("dispute.closed", "Dispute Closed", "Notifies when a dispute is closed."),
            ("dispute.reopened", "Dispute Reopened", "Notifies when a dispute is reopened."),
            ("dispute.escalated", "Dispute Escalated", "Notifies when a dispute is escalated to higher authorities."),
            ("dispute.comment_added", "Dispute Comment Added", "Notifies when a comment is added to a dispute."),
            ("dispute.status_changed", "Dispute Status Changed", "Notifies when the status of a dispute changes."),
            ("dispute.priority_changed", "Dispute Priority Changed", "Notifies when the priority of a dispute changes."),
            ("dispute.agent_replied", "Agent Replied to Dispute", "Notifies when an agent replies to a dispute."),
            ("dispute.user_replied", "User Replied to Dispute", "Notifies when a user replies to a dispute."),
            ("dispute.follow_up_required", "Follow Up Required on Dispute", "Notifies when follow-up is required on a dispute."),
            ("dispute.reminder_set", "Dispute Reminder Set", "Notifies when a reminder is set for a dispute."),
            ("dispute.feedback_requested", "Feedback Requested on Dispute", "Notifies when feedback is requested on a dispute."),
            ("dispute.knowledge_base_article_linked", "Knowledge Base Article Linked to Dispute", "Notifies when a knowledge base article is linked to a dispute."),
            ("dispute.solution_provided", "Solution Provided for Dispute", "Notifies when a solution is provided for a dispute.")
            ("writer.assigned", "Writer Assigned", "Notifies when a writer is assigned to a task."),
            ("writer.completed", "Writer Completed", "Notifies when a writer completes a task."),
            ("writer.revision_requested", "Revision Requested from Writer", "Notifies when a revision is requested from a writer."),
            ("writer.feedback_provided", "Feedback Provided to Writer", "Notifies when feedback is provided to a writer."),
            ("writer.task_updated", "Writer Task Updated", "Notifies when a task assigned to a writer is updated."),
            ("writer.task_cancelled", "Writer Task Cancelled", "Notifies when a task assigned to a writer is cancelled."),
            ("writer.task_reopened", "Writer Task Reopened", "Notifies when a task assigned to a writer is reopened."),
            ("writer.task_approved", "Writer Task Approved", "Notifies when a task assigned to a writer is approved."),
            ("writer.task_rejected", "Writer Task Rejected", "Notifies when a task assigned to a writer is rejected."),
            ("writer.task_reminder", "Writer Task Reminder", "Reminds writers about pending tasks."),
            ("writer.task_due_soon", "Writer Task Due Soon", "Notifies writers about tasks that are due soon."),
            ("writer.performance_review", "Writer Performance Review", "Notifies writers about their performance reviews."),
            ("editor.assigned", "Editor Assigned", "Notifies when an editor is assigned to a task."),
            ("editor.completed", "Editor Completed", "Notifies when an editor completes a task."),
            ("editor.revision_requested", "Revision Requested from Editor", "Notifies when a revision is requested from an editor."),
            ("editor.feedback_provided", "Feedback Provided to Editor", "Notifies when feedback is provided to an editor."),
            ("editor.task_updated", "Editor Task Updated", "Notifies when a task assigned to an editor is updated."),
            ("editor.task_cancelled", "Editor Task Cancelled", "Notifies when a task assigned to an editor is cancelled."),
            ("editor.task_reopened", "Editor Task Reopened", "Notifies when a task assigned to an editor is reopened."),
            ("editor.task_approved", "Editor Task Approved", "Notifies when a task assigned to an editor is approved."),
            ("editor.task_rejected", "Editor Task Rejected", "Notifies when a task assigned to an editor is rejected."),
            ("editor.task_reminder", "Editor Task Reminder", "Reminds editors about pending tasks."),
            ("editor.task_due_soon", "Editor Task Due Soon", "Notifies editors about tasks that are due soon."),
            ("editor.performance_review", "Editor Performance Review", "Notifies editors about their performance reviews.")
            ("support.assigned", "Support Assigned", "Notifies when a support agent is assigned to a ticket."),
            ("support.completed", "Support Completed", "Notifies when a support agent completes a ticket."),
            ("support.revision_requested", "Revision Requested from Support", "Notifies when a revision is requested from a support agent."),
            ("support.feedback_provided", "Feedback Provided to Support", "Notifies when feedback is provided to a support agent."),
            ("support.ticket_updated", "Support Ticket Updated", "Notifies when a support ticket is updated."),
            ("support.ticket_cancelled", "Support Ticket Cancelled", "Notifies when a support ticket is cancelled."),
            ("support.ticket_reopened", "Support Ticket Reopened", "Notifies when a support ticket is reopened."),
            ("support.ticket_approved", "Support Ticket Approved", "Notifies when a support ticket is approved."),
            ("support.ticket_rejected", "Support Ticket Rejected", "Notifies when a support ticket is rejected."),
            ("support.ticket_reminder", "Support Ticket Reminder", "Reminds support agents about pending tickets."),
            ("support.ticket_due_soon", "Support Ticket Due Soon", "Notifies support agents about tickets that are due soon."),
            ("support.performance_review", "Support Performance Review", "Notifies support agents about their performance reviews.")
        ]
        for code, name, desc in events:
            NotificationEvent.objects.get_or_create(event=code, defaults={"name": name, "description": desc})
        self.stdout.write(self.style.SUCCESS("Notification events seeded!"))
