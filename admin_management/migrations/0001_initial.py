# Generated by Django 5.1.5 on 2025-02-04 03:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('details', models.TextField(blank=True, help_text='Additional context about the action.', null=True)),
                ('old_data', models.JSONField(blank=True, help_text='Previous data before change.', null=True)),
                ('new_data', models.JSONField(blank=True, help_text='New data after change.', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superadmin', models.BooleanField(default=False, help_text='Has unrestricted access (Superadmin Only).')),
                ('can_manage_users', models.BooleanField(default=True, help_text='Can manage writers, editors, clients, and support staff.')),
                ('can_suspend_users', models.BooleanField(default=True, help_text='Can suspend users (except superadmins).')),
                ('can_put_on_probation', models.BooleanField(default=True, help_text='Can place users on probation.')),
                ('can_handle_orders', models.BooleanField(default=True, help_text='Can manage order assignments, edits, and cancellations.')),
                ('can_resolve_disputes', models.BooleanField(default=True, help_text='Can handle disputes between clients and writers.')),
                ('can_manage_payouts', models.BooleanField(default=True, help_text='Can approve writer payouts and financial transactions.')),
                ('can_manage_financials', models.BooleanField(default=True, help_text='Can manage payments, refunds, and discounts.')),
                ('can_manage_tickets', models.BooleanField(default=True, help_text='Can handle support tickets and client inquiries.')),
                ('can_view_reports', models.BooleanField(default=True, help_text='Can access reporting and analytics.')),
                ('can_blacklist_users', models.BooleanField(default=False, help_text='Can blacklist users (Superadmins only).')),
                ('can_manage_clients', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True, help_text='Soft delete instead of removing admin.')),
                ('last_login', models.DateTimeField(blank=True, help_text='Last login timestamp.', null=True)),
                ('last_action', models.CharField(blank=True, help_text='Last performed action.', max_length=255, null=True)),
                ('action_count', models.IntegerField(default=0, help_text='Total actions taken by the admin.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdminPromotionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlacklistedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email of the blacklisted user.', max_length=254, unique=True)),
                ('reason', models.TextField(blank=True, help_text='Reason for blacklisting.', null=True)),
                ('blacklisted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Blacklisted User',
                'verbose_name_plural': 'Blacklisted Users',
            },
        ),
    ]
