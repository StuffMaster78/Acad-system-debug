# Generated by Django 5.1.5 on 2025-01-31 09:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_manage_writers', models.BooleanField(default=True, help_text='Can manage writers.')),
                ('can_manage_support', models.BooleanField(default=True, help_text='Can manage support staff.')),
                ('can_manage_editors', models.BooleanField(default=True, help_text='Can manage editors.')),
                ('can_suspend_users', models.BooleanField(default=True, help_text='Can suspend writers, editors, and clients.')),
                ('can_handle_orders', models.BooleanField(default=True, help_text='Can manage order assignments and reassignments.')),
                ('can_resolve_disputes', models.BooleanField(default=True, help_text='Can handle disputes between clients and writers.')),
                ('can_manage_payouts', models.BooleanField(default=True, help_text='Can approve writer payouts.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
